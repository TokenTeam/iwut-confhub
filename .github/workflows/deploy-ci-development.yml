name: Deploy Development Environment
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
jobs:
  publish:
    environment: development
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker build
        run: |
          docker build . -t ${{ vars.DOCKER_IMAGE_NAME }}:dev
      - name: Docker tag
        run: docker tag ${{ vars.DOCKER_IMAGE_NAME }}:dev ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:dev
      - name: Docker push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:dev

  deploy:
    needs: publish
    name: Deploy docker image
    environment: development
    runs-on: sh-06_dev
    steps:
      - name: Docker pull
        run: |
          sudo docker pull mirror.ccs.tencentyun.com/${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:dev
      - name: Deploy with docker run
        run: |
          sudo docker stop ${{ vars.DOCKER_CONTAINER_NAME }} || true
          sudo docker rm ${{ vars.DOCKER_CONTAINER_NAME }} || true
          sudo docker run -d --name ${{ vars.DOCKER_CONTAINER_NAME }} \
            -p ${{ vars.DOCKER_CONTAINER_PORT }}:80 \
            -e ConfigProvider__RepoOwner=${{ vars.ENV_REPO_OWNER }} \
            -e ConfigProvider__RepoName=${{ vars.ENV_REPO_NAME }} \
            -e ConfigProvider__Branch=${{ vars.ENV_BRANCH }} \
            -e ConfigProvider__UserName=${{ secrets.ENV_USER_NAME }} \
            -e ConfigProvider__Password=${{ secrets.ENV_PASSWORD }} \
            -e ConfigProvider__AppId=${{ secrets.ENV_APP_ID }} \
            -e ConfigProvider__AppSecret=${{ secrets.ENV_SECRET }} \
            -e DOTNET_ENVIRONMENT=${{ vars.DOTNET_ENV }} \
            mirror.ccs.tencentyun.com/${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}:dev
      - name: Docker image prune
        run: |
          docker image prune -a -f